metadata:
 description: This is the guardian of children part of the document assembly package.
 authors:
   - name: James W. "Mitch" Mitchell
     organization: Gauntt Koen Binney & Kidd, LLP
 revision_date: 2019-11-12
--- 
objects:
  - child_guardian: DAList.using(object_type=Individual)
---
table: child_guardian.table
rows: child_guardian
columns: 
  - "#": |
      row_index + 1
  - Name: row_item.name
  - Address: row_item.address
  - Phone: row_item.phone_number
edit:
  - name.first
  - address
  - phone_number
allow reordering: True
---
mandatory: True
question: |
  Review Guardian (Children)
subquestion: |
  Here is the information you provided for guardians of your children.
  ${ child_guardian.table }  
  ${ child_guardian.add_action() }
field: review_child_guardian
---
question: |
  **Declaration of Guardian for My Children**
subquestion: |
  Let's gather information about individuals you want to serve as {guardian for your children} if you are deceased or {incapacitated}.

  In this Declaration, you are stating your wishes in advance as to who you would want the court to appoint.

terms:
  guardian for your children: |
    This is someone appointed by the court in the event you are deceased or incapacitated **and** there is no other surviving parent.

    Ultimately, the court will decide who will serve as guardian, but this Declaration will be taken into account.
  incapacitated: |
    This is a state when you are unable to conduct your own affairs.

    In other words, you are unable make normal, rational decisions that are not harmful to yourself or to others.
field: child_guardian.there_are_any
section: Guardian (Children)
---
question: Would you like to list another guardian for your children?
subquestion: |
  **You are required to have at least one, but two or three is preferable.**
yesno: child_guardian.there_is_another
---
code: |
  people = spouse.complete_elements() \
         + financial_agent.complete_elements() \
         + healthcare_agent.complete_elements() \
		 + authorized_person.complete_elements() \
		 + guardian.complete_elements() \
		 + child_guardian.complete_elements()
---
reconsider:
  - people
question: |
  Who do you want to serve as ${ ordinal(i) } guardian of your children?
subquestion: |
  **You are required to have at least one, but two or three is preferable.**

  List them in the order you want them to serve. Remember that the court ultimately decides 
  who is appointed but will take this written **Declaration of Guardian for My Children** into account.
  
  Use the dropdown box to choose from a person whose name you provided earlier,
  or you may choose to enter information for someone new.
fields:
  - Existing or New: child_guardian[i].existing_or_new
    datatype: radio
    default: Existing
    choices:
      - Existing
      - New
  - Person: child_guardian[i]
    show if:
      variable: child_guardian[i].existing_or_new
      is: Existing
    datatype: object
    choices: people
  - First Name: child_guardian[i].name.first
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
  - Middle name: child_guardian[i].name.middle
    required: False
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
  - Last Name: child_guardian[i].name.last
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
  - Suffix: child_guardian[i].name.suffix
    required: False
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
    code: |
      name_suffix()
  - Address: child_guardian[i].address.address
    address autocomplete: True
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
  - City: child_guardian[i].address.city
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
  - State: child_guardian[i].address.state
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
    code: |
      states_list()
  - Zip: child_guardian[i].address.zip
    required: False
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
  - Phone Number: child_guardian[i].phone_number
    show if:
      variable: child_guardian[i].existing_or_new
      is: New
    datatype: phone_number
    validate: phone_number_is_valid
    hint: (XXX) XXX-XXXX
---
code: |
  has_young_children = False
  for child in client.child:
    if child.birthdate.plus(years=18) > today():
      has_young_children = True
  client.has_young_children = has_young_children
  del has_young_children
---
mandatory: True
code: |
  reconsider('client.has_young_children')
  if client.has_young_children:
    if child_guardian.there_are_any:
      review_child_guardian