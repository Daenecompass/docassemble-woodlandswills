metadata:
 description: This is the HIPAA declaration part of the document assembly package.
 authors:
   - name: James W. "Mitch" Mitchell
     organization: Gauntt Koen Binney & Kidd, LLP
 revision_date: 2019-11-12
--- 
objects:
  - authorized_person: DAList.using(object_type=Individual)
---
table: authorized_person.table
rows: authorized_person
columns: 
  - "#": |
      row_index + 1
  - Name: row_item.name
  - Address: row_item.address
  - Phone: row_item.phone_number
edit:
  - name.first
  - address
  - phone_number
allow reordering: True
---
mandatory: True
question: |
  Review Authorized Persons
subquestion: |
  Here is the information you provided for persons authorized to receive your protected health information.
  ${ authorized_person.table }  
  ${ authorized_person.add_action() }
field: authorized_person_review
---
question: |
  **Authorization for Disclosure of Protected Health Information**
subquestion: |
  Let's gather information about individuals who you want to list as {authorized persons} to receive your {protected health information}.
  Health care providers given a copy of this document may disclose your protected health information to the {authorized persons}.
terms:
  authorized persons: |
    The persons listed in this document will have access to your medical records.
  protected health information: |
    This is defined broadly in the federal law known as HIPAA, which generally means treatment records and billing records.
    This information cannot be disclosed without your consent.

field: authorized_person.there_are_any
section: HIPAA Authorization
---
question: Would you like to list another person authorized to receive your protected health information?
subquestion: |
  **You are required to have at least one, but two or three is preferable.**
yesno: authorized_person.there_is_another
---
code: |
  people = spouse.complete_elements() \
         + financial_agent.complete_elements() \
         + healthcare_agent.complete_elements() \
		 + authorized_person.complete_elements() \
		 + guardian.complete_elements() \
		 + child_guardian.complete_elements()
---
reconsider:
  - people
question: |
  Who do you want to serve as ${ ordinal(i) } authorized person?
subquestion: |
  List them in the order you want them to serve. Only one at a time will 
  serve as agent under the power of attorney.  
  
  Use the dropdown box to choose from a person whose name you provided earlier,
  or you may choose to enter information for someone new.
fields:
  - Existing or New: authorized_person[i].existing_or_new
    datatype: radio
    default: Existing
    choices:
      - Existing
      - New
  - Person: authorized_person[i]
    show if:
      variable: authorized_person[i].existing_or_new
      is: Existing
    datatype: object
    choices: people
  - First Name: authorized_person[i].name.first
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
  - Middle name: authorized_person[i].name.middle
    required: False
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
  - Last Name: authorized_person[i].name.last
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
  - Suffix: authorized_person[i].name.suffix
    required: False
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
    code: |
      name_suffix()
  - Address: authorized_person[i].address.address
    address autocomplete: True
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
  - City: authorized_person[i].address.city
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
  - State: authorized_person[i].address.state
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
    code: |
      states_list()
  - Zip: authorized_person[i].address.zip
    required: False
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
  - Phone Number: authorized_person[i].phone_number
    show if:
      variable: authorized_person[i].existing_or_new
      is: New
    datatype: phone_number
    validate: phone_number_is_valid
    hint: (XXX) XXX-XXXX