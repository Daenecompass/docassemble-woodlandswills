metadata:
 description: This is the medical agent part of the document assembly package.
 authors:
   - name: James W. "Mitch" Mitchell
     organization: Gauntt Koen Binney & Kidd, LLP
 revision_date: 2019-11-14
---
objects:
  - healthcare_agent: DAList.using(object_type=Individual, minimum_number=2)
---
mandatory: True
code: |
  there_are_any = False
  if healthcare_agent.there_are_any:
    review_healthcare_agent
---
table: healthcare_agent.table
rows: healthcare_agent
columns:
  - "#": |
      row_index + 1
  - Name: row_item.name
  - Address: row_item.address
  - Phone: row_item.phone_number
edit:
  - name.first
  - address
  - phone_number
allow reordering: True
---
mandatory: True
question: |
  Review Medical Agents
subquestion: |
  Here is the information you provided for your medical agents.
  ${ healthcare_agent.table }
  ${ healthcare_agent.add_action() }
field: review_healthcare_agent
---
question: |
  **Health Care Power of Attorney**
subquestion: |
  Let's gather information about individuals you want to serve as {medical agent}.

  They will be able to make treatment decisions for you in the event you are {incapacitated}.
terms:
  medical agent: |
    Someone you authorize to make healthcare decisions for you in the event you are incapacitated.
  incapacitated: |
    This is a state when you are unable to communicate your own desires concerning treatment (for instance, if you are in a coma).
field: healthcare_agent.there_are_any
section: Medical Agent
---
question: Would you like to list another medical agent?
subquestion: |
  **You are required to have at least two.**
yesno: healthcare_agent.there_is_another
---
code: |
  people = spouse.complete_elements() \
         + financial_agent.complete_elements()
---
reconsider:
  - people
question: |
  Who do you want to serve as ${ ordinal(i) } medical agent?
subquestion: |
  List them in the order you want them to serve. Only one at a time will
  serve as agent under the power of attorney.

  Use the dropdown box to choose from a person whose name you provided earlier,
  or you may choose to enter information for someone new.
fields:
  - Existing or New: healthcare_agent[i].existing_or_new
    datatype: radio
    default: Existing
    choices:
      - Existing
      - New
  - Person: healthcare_agent[i]
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: Existing
    datatype: object
    choices: people
  - First Name: healthcare_agent[i].name.first
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
  - Middle name: healthcare_agent[i].name.middle
    required: False
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
  - Last Name: healthcare_agent[i].name.last
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
  - Suffix: healthcare_agent[i].name.suffix
    required: False
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
    code: |
      name_suffix()
  - Address: healthcare_agent[i].address.address
    address autocomplete: True
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
  - City: healthcare_agent[i].address.city
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
  - State: healthcare_agent[i].address.state
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
    code: |
      states_list()
  - Zip: healthcare_agent[i].address.zip
    required: False
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
  - Phone Number: healthcare_agent[i].phone_number
    show if:
      variable: healthcare_agent[i].existing_or_new
      is: New
    datatype: phone_number
    validate: phone_number_is_valid
    hint: (XXX) XXX-XXXX
